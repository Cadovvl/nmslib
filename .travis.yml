language: cpp

sudo: required

addons:
  apt:
    packages: &core_build
    - g++
    - libblas-dev
    - liblapack-dev
    - gfortran
    - cmake
    - libboost-all-dev
    - libgsl0-dev
    - libeigen3-dev
  homebrew:
    packages:
    - pyenv
    update: true

matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    env: PYTHON=2.7
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
          - *core_build
          - python2.7-dev
  - os: linux
    env: PYTHON=3.5
    dist: trusty
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.5-dev
  - os: linux
    env: PYTHON=3.6
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.6-dev
  - os: linux
    env: PYTHON=3.7
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.7-dev
  - os: linux
    env: PYTHON=3.8
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.8-dev
        - python3.8-distutils
  - os: linux
    env: PYTHON=3.9
    dist: xenial
    services:
    - docker
    addons:
      apt:
        update: true
        sources:
        - ubuntu-toolchain-r-test
        - deadsnakes
        packages:
        - *core_build
        - python3.9-dev
        - python3.9-distutils
  - os: linux
    dist: xenial
    env: PYTHON=3.6
    arch: arm64
    services:
    - docker
    addons:
      apt:
       update: true
       sources:
       - deadsnakes
       - sourceline: 'ppa:ubuntu-toolchain-r/test'
       packages:
         - *core_build
         - python3.6-dev
  - os: linux
    dist: xenial
    env: PYTHON=3.7
    arch: arm64
    services:
    - docker
    addons:
      apt:
       update: true
       sources:
       - deadsnakes
       - sourceline: 'ppa:ubuntu-toolchain-r/test'
       packages:
         - *core_build
         - python3.7-dev
  - os: linux
    dist: xenial
    env: PYTHON=3.8
    arch: arm64
    services:
    - docker
    addons:
      apt:
       update: true
       sources:
       - deadsnakes
       - sourceline: 'ppa:ubuntu-toolchain-r/test'
       packages:
         - *core_build
         - python3.8-dev
         - python3.8-distutils
  - os: linux
    dist: xenial
    env: PYTHON=3.9
    arch: arm64
    services:
    - docker
    addons:
      apt:
       update: true
       sources:
       - deadsnakes
       - sourceline: 'ppa:ubuntu-toolchain-r/test'
       packages:
         - *core_build
         - python3.9-dev
         - python3.9-distutils
  - os: osx
    env: PYTHON=2.7-dev
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=3.5-dev
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=3.6-dev
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=3.7-dev
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=3.8-dev
    osx_image: xcode11.2
  - os: osx
    env: PYTHON=3.9-dev
    osx_image: xcode11.2

  - os: osx
    env: PYTHON=2.7-dev
    osx_image: xcode12
  - os: osx
    env: PYTHON=3.5-dev
    osx_image: xcode12
  - os: osx
    env: PYTHON=3.6-dev
    osx_image: xcode12
  - os: osx
    env: PYTHON=3.7-dev
    osx_image: xcode12
  - os: osx
    env: PYTHON=3.8-dev
    osx_image: xcode12
  - os: osx
    env: PYTHON=3.9-dev
    osx_image: xcode12
  allow_failures:
  - os: osx

before_install:
- |
  PY=python
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
    export CXX=g++ CC=gcc
    if [ $(echo "$PYTHON" | grep "^3\.") ]; then
      PY=python${PYTHON}
      curl https://bootstrap.pypa.io/get-pip.py | sudo -H $PY
    fi
  fi

  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    pyenv install $PYTHON
    PY=/Users/travis/.pyenv/versions/${PYTHON}/bin/python
  fi

  PIP="$PY -m pip"
  sudo -H $PIP install --upgrade pip

install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    cmake similarity_search -DWITH_EXTRAS=1
  else
    cmake similarity_search
  fi
  make -j 4
  $PIP install --user scipy six flake8 psutil
  cd python_bindings
  $PIP install --user -r requirements.txt
  $PY setup.py build_ext
  $PIP install --user .
  cd ..

script:
- $PY --version
- cd python_bindings && $PY setup.py test && cd ..
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ] ; then
      set -e
      cd similarity_search;
      ./release/bunit
      travis_retry ./release/test_integr integr.log 
      cd ..
      set +e
  fi

after_script:
  - |
    if [ "$TRAVIS_TAG" ]; then
      export TRAVIS_OS_NAME
      export PY
      export PIP
      export PYTHON
      bash travis/deploy.sh
      $PIP install --user "six>=1.9.0"
      $PIP install --user twine
      cp .pypirc ~/.pypirc
      if [ "$PYPI_PASSWORD" = "" ] ; then
        echo "PyPi password is empty!"
      else
        echo "PyPi password is set!"
      fi
      $PY -m twine upload -r pypi -p $PYPI_PASSWORD --skip-existing python_bindings/dist/* &>/dev/null
      echo "Twine upload status: $?"
    else
      echo "Skipping deployment because this is not a tagged commit"
    fi

before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi

cache:
  - apt
  - directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

env:
  global:
  - secure: Z5TOlUMWbPpcL8bfJF7C33t+B+qhoLPsZSlnQedpFLVhygS9iXMjuEfXlh0EuhFS39cJkmqBzgYDWK8T3klDTbVwlUUNFzNC9D/n2v9ct9Hulz0IWalXjzHEclcVC7hmCno1LtZFmOt6Oyc6euvgQLv7+yV501GiX1z3dMUFG4S+tEsynARCsOt0KKzzEgxj5DWhbaqqP4fm1tV7H1BspxLZpyn1turadhTSEuv398tJcbU08AtJGds4LFaQfhBf2vID4O3DZjxCRTLIn4g6TdjseiCPtYSkWOFiC4/+IOhFXgX046JiRaX1wynIbdnuAst9LgL5Ie87dQ0RoWMOsx2cVyOf6i+paJUpvEEQUltK4PdDecjeVYAbK6cIYf0UKjU2OJQtudktgdkSmf6IRrFvQdE1rZBaFCmMlorfOK3RuARtKCSp7E6S7P0OJxKTK3AwdTxEORhZ9FgqAWf1JWUMda7BC1d+qTofOkoiat8n3pPaZJCt+5tqAswoAcN9RFP951GPf9nhKlw22S58iFhtCwW7Odl+YtVSFPO5egGCOT48UnUIvcrsV3r2YQyw3ObAGn44C6wakR2ZfZHvzUKw8sD7VRbAe1PQuq8yn+mIUVa6K5/VEHq/gsmmpGKwatgeeoqTLsm8TC58fJKTGBH0p622dXOwef1TSzViyRM=
